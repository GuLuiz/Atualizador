name: Deploy to Server via SSH

on:
  push:
    branches:
      - main # Altere para a branch que você usa para deploy (ex: master, production)

jobs:
  deploy:
    runs-on: ubuntu-latest # O ambiente onde a ação será executada

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4 # Baixa seu código do GitHub

    # Se você tem um projeto que precisa de build (ex: Node.js/frontend dentro do plugin)
    # Descomente e ajuste os passos abaixo, se aplicável:
    # - name: Setup Node.js (exemplo para Node.js/frontend)
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '18' # Ajuste a versão do Node.js
    # - name: Install Dependencies (exemplo)
    #   run: npm install
    # - name: Build Project (exemplo)
    #   run: npm run build
    #   env:
    #     CI: true # Para evitar avisos de testes em ambiente CI

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0 # Uma Action popular para SSH/SCP
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 65002 # Porta SSH (geralmente 22)
        source: "." # Caminho dos arquivos no seu repositório a serem copiados ('.' para tudo na raiz)
                   # Se você tem uma pasta 'dist' ou 'build' após o build, altere para 'dist/' ou 'build/'
        target: ${{ secrets.TARGET_DIR }} # Caminho no servidor de destino
        overwrite: true # Sobrescrever arquivos existentes
        # Se precisar executar comandos após a cópia (ex: reiniciar serviço web)
        # script: |
        #   cd ${{ secrets.TARGET_DIR }}
        #   sudo systemctl reload php-fpm # Exemplo para recarregar PHP-FPM se for um plugin
        #   # sudo systemctl restart nginx # Exemplo para reiniciar Nginx
        #   # Adicione outros comandos de pós-deploy aqui
        
    - name: Deployment completed
      run: echo "Deployment para o servidor concluído!"
