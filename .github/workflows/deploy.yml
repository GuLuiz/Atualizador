name: Deploy to Server via SCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify index.php content (for debugging - can remove later)
        run: |
          echo "Content of index.php found in the repository root on the runner:"
          cat index.php
          echo "--- End of index.php verification ---"

      - name: Prepare package for deploy (exclude unwanted items)
        run: |
          set -e
          mkdir -p deploy
          rsync -a --delete \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude ".gitignore" \
            --exclude ".gitattributes" \
            --exclude "node_modules/" \
            --exclude "tests/" \
            --exclude "docs/" \
            --exclude ".env" \
            --exclude "deploy/" \
            ./ deploy/

      - name: List contents of deploy folder
        run: ls -la deploy/

      - name: Testar Permissões de Escrita Remota
        uses: appleboy/scp-action@v1.0.0
        id: remote_write_test
        with:
          host: ${{ secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: 65002
          debug: true

          commands: |
            echo "Este é um arquivo de teste gerado pelo GitHub Actions." > public_html/updates/github_actions_test.txt
            ls -l public_html/updates/github_actions_test.txt || echo "Erro: Arquivo não encontrado ou permissão negada no ls -l."
            cat public_html/updates/github_actions_test.txt || echo "Erro: Não foi possível ler o conteúdo do arquivo."
            echo "--- Fim do teste de escrita ---"

      - name: Deploy via SCP (send only content from deploy/)
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST}}
          username: ${{ secrets.SSH_USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          port: 65002
          source: "deploy/" 
          target: ${{ secrets.TARGET_DIR}}
          overwrite: true
          debug: true
          strip_components: 1

      - name: Final Message
        run: echo "Deployment to server completed!"
